{"version":3,"sources":["components/Item/Item.js","components/ItemList/ItemList.js","components/InputItem/InputItem.js","components/Footer/Footer.js","components/Todo/Todo.js","img/error.png","components/ErrorBlock/ErrorBlock.js","components/About/About.js","components/Contacts/Contacts.js","components/App/App.js","index.js","components/About/About.module.css","components/Contacts/Contacts.module.css","components/App/App.module.css","components/Item/Item.module.css","components/Footer/Footer.module.css","components/Todo/Todo.module.css"],"names":["Item","this","props","value","isDone","onClickDone","id","onClickDelete","className","classnames","styles","item","done","Checkbox","checked","defaultChecked","color","inputProps","onClick","Tooltip","title","IconButton","aria-label","React","Component","ItemList","items","map","InputItem","state","inputValue","errorString","errorText","onButtonClick","event","preventDefault","setState","find","onClickAdd","Grid","TextField","error","helperText","label","style","margin","placeholder","fullWidth","onChange","target","Button","href","variant","Footer","count","onClickFilter","itemActive","itemDone","text","footer","Chip","size","component","clickable","Todo","itemsFilter","initialState","JSON","parse","localStorage","getItem","filter","useState","setItems","setCount","setFilter","useEffect","setItem","stringify","length","wrap","Card","CardContent","newItems","newItemList","newItem","filtered","ErrorBlock","src","errorImg","alt","btnLink","window","location","reload","octokit","Octokit","Contacts","card","contacts","App","sidebar","MenuList","to","link","MenuItem","content","path","exact","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.00a62171.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport styles from \"./Item.module.css\";\r\n\r\nclass Item extends React.Component {\r\n  render() {\r\n    const { value, isDone, onClickDone, id, onClickDelete } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className={classnames({\r\n          [styles.item]: true,\r\n          [styles.done]: isDone,\r\n        })}\r\n      >\r\n        <Checkbox\r\n          checked={isDone}\r\n          defaultChecked\r\n          color=\"secondary\"\r\n          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n          onClick={() => onClickDone(id)}\r\n        />\r\n        {value}\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton\r\n            aria-label=\"delete\"\r\n            color=\"secondary\"\r\n            onClick={() => onClickDelete(id)}\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nItem.propTypes = {\r\n  isDone: PropTypes.bool,\r\n  value: PropTypes.string,\r\n  id: PropTypes.number,\r\n};\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Item from \"../Item/Item\";\r\n\r\nconst ItemList = ({ items, onClickDone, onClickDelete }) => (\r\n  <ul>\r\n    {items.map((item) => (\r\n      <li key={item.id}>\r\n        <Item\r\n          value={item.value}\r\n          isDone={item.isDone}\r\n          id={item.id}\r\n          onClickDone={onClickDone}\r\n          onClickDelete={onClickDelete}\r\n        />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nItemList.propTypes = {\r\n  items: PropTypes.array,\r\n  onClickDone: PropTypes.func,\r\n  onClickDelete: PropTypes.func,\r\n};\r\n\r\nexport default ItemList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nclass InputItem extends React.Component {\r\n  state = {\r\n    inputValue: \"\",\r\n    errorString: false,\r\n    errorText: \"\",\r\n  };\r\n\r\n  onButtonClick = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.inputValue === \"\") {\r\n      this.setState({\r\n        errorString: true,\r\n        errorText: \"Поле не может быть пустым\",\r\n      });\r\n    } else if (\r\n      this.props.items.find((item) => item.value === this.state.inputValue)\r\n    ) {\r\n      this.setState({\r\n        errorString: true,\r\n        errorText: \"Данная задача была добавлена ранее\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        inputValue: \"\",\r\n        errorString: false,\r\n        errorText: \"\",\r\n      });\r\n      this.props.onClickAdd(this.state.inputValue);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Grid>\r\n        <TextField\r\n          error={this.state.errorString}\r\n          helperText={this.state.errorText}\r\n          id=\"standard-full-width\"\r\n          label=\"Добавь задачу\"\r\n          style={{ margin: 8 }}\r\n          placeholder=\"just do it!\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          value={this.state.inputValue}\r\n          onChange={(event) =>\r\n            this.setState({ inputValue: event.target.value })\r\n          }\r\n        />\r\n        <Button\r\n          href=\"\"\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          fullWidth\r\n          onClick={this.onButtonClick}\r\n        >\r\n          Добавить\r\n        </Button>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport styles from \"./Footer.module.css\";\r\nimport Item from \"../Item/Item\";\r\n\r\nconst Footer = ({ count, itemActive, itemDone, onClickFilter }) => {\r\n  return (\r\n    <div>\r\n      <p className={styles.text}>Осталось выполнить вот столько дел: {count}</p>\r\n      <div className={styles.footer}>\r\n        <div onClick={() => onClickFilter(\"all\")}>\r\n          <Chip\r\n            label=\"Все задачи\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            component=\"a\"\r\n            href=\"#chip\"\r\n            clickable\r\n          />\r\n        </div>\r\n        <div onClick={() => onClickFilter(\"done\")}>\r\n          <Chip\r\n            label=\"Активные\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            component=\"a\"\r\n            href=\"#chip\"\r\n            clickable\r\n          />\r\n        </div>\r\n        <div onClick={() => onClickFilter(\"active\")}>\r\n          <Chip\r\n            label=\"Выполнены\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            component=\"a\"\r\n            href=\"#chip\"\r\n            clickable\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nFooter.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n};\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport PropTypes from \"prop-types\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport ItemList from \"../ItemList/ItemList\";\r\nimport InputItem from \"../InputItem/InputItem\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport styles from \"./Todo.module.css\";\r\n\r\nconst Todo = () => {\r\n  const initialState = {\r\n    items: JSON.parse(localStorage.getItem(\"items\")) || [],\r\n    filter: \"all\",\r\n  };\r\n\r\n  const [items, setItems] = useState(initialState.items);\r\n\r\n  const [count, setCount] = useState(0);\r\n  const [filter, setFilter] = useState(initialState.filter);\r\n  let itemsFilter;\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"items\", JSON.stringify(items));\r\n  });\r\n\r\n  const itemActive = items.filter((item) => item.isDone === true).length;\r\n  const itemDone = items.filter((item) => item.isDone === false).length;\r\n\r\n  const onClickDone = (id) => {\r\n    const newItemList = items.map((item) => {\r\n      const newItem = { ...item };\r\n      if (item.id === id) {\r\n        newItem.isDone = !item.isDone;\r\n      }\r\n      return newItem;\r\n    });\r\n    setItems(newItemList);\r\n  };\r\n\r\n  const onClickDelete = (id) => {\r\n    const newItemList = items.filter((item) => item.id !== id);\r\n\r\n    setItems(newItemList);\r\n    setCount((count) => count - 1);\r\n  };\r\n\r\n  const onClickAdd = (value) => {\r\n    const newItems = [\r\n      {\r\n        value,\r\n        isDone: false,\r\n        id: count + 1,\r\n      },\r\n      ...items,\r\n    ];\r\n\r\n    setItems(newItems);\r\n    setCount((count) => count + 1);\r\n  };\r\n\r\n  const onClickFilter = (filtered) => setFilter(filtered);\r\n  switch (filter) {\r\n    case \"done\":\r\n      itemsFilter = items.filter((item) => !item.isDone);\r\n      break;\r\n    case \"active\":\r\n      itemsFilter = items.filter((item) => item.isDone);\r\n      break;\r\n    default:\r\n      itemsFilter = items;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.wrap}>\r\n      <Card variant=\"outlined\">\r\n        <CardContent>\r\n          <h1 className={styles.title}>Важные дела:</h1>\r\n          <InputItem items={items} onClickAdd={onClickAdd} />\r\n          <ItemList\r\n            items={items}\r\n            onClickDone={onClickDone}\r\n            onClickDelete={onClickDelete}\r\n            items={itemsFilter}\r\n          />\r\n          <Footer\r\n            count={items.filter((item) => !item.isDone).length}\r\n            filtered={filter}\r\n            itemActive={itemActive}\r\n            itemDone={itemDone}\r\n            onClickFilter={onClickFilter}\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nTodo.propTypes = {\r\n  onClickAdd: PropTypes.func,\r\n};\r\n\r\nexport default Todo;\r\n","export default __webpack_public_path__ + \"static/media/error.43f427fd.png\";","import React from \"react\";\r\nimport styles from \"./ErrorBlock.module.css\";\r\nimport errorImg from \"../../img/error.png\";\r\n\r\nconst ErrorBlock = () => (\r\n  <div>\r\n    <img src={errorImg} alt=\"Error\" />\r\n    <div className={styles.text}>\r\n      <h2>Что-то пошло не так...</h2>\r\n      <p>\r\n        Попробуйте\r\n        <button\r\n          className={styles.btnLink}\r\n          onClick={() => window.location.reload()}\r\n        >\r\n          {\" \"}\r\n          загрузить{\" \"}\r\n        </button>\r\n        еще раз\r\n      </p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default ErrorBlock;\r\n","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport ErrorBlock from \"../ErrorBlock/ErrorBlock\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { Octokit } from \"@octokit/rest\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport styles from \"./About.module.css\";\r\n\r\nconst octokit = new Octokit();\r\n\r\nconst title = <h1 className={styles.title}>Мои репозитории: </h1>;\r\n\r\nclass About extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    nameUser: [],\r\n    userInfo: [],\r\n    avatarUrl: [],\r\n    repoList: [],\r\n    isError: false,\r\n    errorText: \"\",\r\n    bio: [],\r\n    html_url: [],\r\n    pageLimit: 2,\r\n    countPages: 0,\r\n    currentPage: 0,\r\n    repoPageList: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    octokit.repos\r\n      .listForUser({\r\n        username: \"DorokhovaNA\",\r\n      })\r\n      .then(({ data }) => {\r\n        this.setState({\r\n          repoList: data,\r\n          isLoading: false,\r\n        });\r\n\r\n        this.setState({\r\n          repoPageList: this.state.repoList.slice(0, this.state.pageLimit),\r\n          countPages: Math.ceil(\r\n            this.state.repoList.length / this.state.pageLimit\r\n          ),\r\n        });\r\n      })\r\n      .catch((err) =>\r\n        this.setState({\r\n          isLoading: false,\r\n          isError: true,\r\n          errorText: \"Данные недоступны\",\r\n        })\r\n      );\r\n    octokit.users\r\n      .getByUsername({\r\n        username: \"DorokhovaNA\",\r\n      })\r\n      .then((res) => {\r\n        this.setState({\r\n          nameUser: res.data.login,\r\n          avatarUser: res.data.avatar_url,\r\n          bio: res.data.bio,\r\n          html_url: res.data.html_url,\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((err) =>\r\n        this.setState({\r\n          isLoading: false,\r\n          isError: true,\r\n          errorText: \"Что-то пошло не так...\",\r\n        })\r\n      );\r\n  }\r\n\r\n  onChangePagination(event, value) {\r\n    this.setState({\r\n      currentPage: value,\r\n      repoPageList: this.state.repoList.slice(\r\n        (value - 1) * this.state.pageLimit,\r\n        (value - 1) * this.state.pageLimit + this.state.pageLimit\r\n      ),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isLoading,\r\n      repoList,\r\n      avatarUser,\r\n      nameUser,\r\n      isError,\r\n      errorText,\r\n      bio,\r\n      html_url,\r\n      repoPageList,\r\n      countPages,\r\n    } = this.state;\r\n    return (\r\n      <Card variant=\"outlined\">\r\n        <CardContent className={styles.card}>\r\n          <img className={styles.img} src={avatarUser} alt={avatarUser} />\r\n          <h1 className={styles.title}>\r\n            {\" \"}\r\n            {isError ? errorText : \"Дорохова Нина\"}{\" \"}\r\n          </h1>\r\n          <div className={styles.bio}> {bio} </div>\r\n          <div className={styles.github}>\r\n            <GitHubIcon />\r\n          </div>\r\n          <div>\r\n            <h1 className={styles.title}>\r\n              {isLoading ? <CircularProgress /> : \"Мои репозитории:\"}\r\n            </h1>\r\n            {!isLoading && (\r\n              <ul>\r\n                {isError ? (\r\n                  <ErrorBlock />\r\n                ) : (\r\n                  repoPageList.map((repo) => (\r\n                    <li key={repo.name}>\r\n                      <a\r\n                        href={repo.html_url}\r\n                        className={styles.link}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                      >\r\n                        {repo.name}\r\n                      </a>\r\n                      <p className={styles.text}>{repo.description}</p>\r\n                      <div>\r\n                        <span className={styles.language}>\r\n                          {\" \"}\r\n                          {repo.language}{\" \"}\r\n                        </span>\r\n                        <span className={styles.updated}>\r\n                          {\"updated \"}\r\n                          {new Date(repo.updated_at).toLocaleString(\"en-US\", {\r\n                            day: \"numeric\",\r\n                            month: \"short\",\r\n                            year: \"numeric\",\r\n                          })}\r\n                        </span>\r\n                      </div>\r\n                    </li>\r\n                  ))\r\n                )}\r\n              </ul>\r\n            )}\r\n          </div>\r\n          <div className={styles.pagination}>\r\n            <Pagination\r\n              count={countPages}\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onChange={this.onChangePagination.bind(this)}\r\n            />\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport TelegramIcon from \"@material-ui/icons/Telegram\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport styles from \"./Contacts.module.css\";\r\n\r\nconst title = <h1 className={styles.title}>Контакты: </h1>;\r\n\r\nconst Contacts = () => (\r\n  <Card variant=\"outlined\">\r\n    <CardContent className={styles.card}>\r\n      {title}\r\n      <a className={styles.contacts} href=\"mailto:nisan261lib@mail.ru\">\r\n        <EmailIcon color=\"info\" />\r\n        nisan261lib@mail.ru\r\n      </a>\r\n      <a className={styles.contacts} href=\"https://github.com/DorokhovaNA\">\r\n        <GitHubIcon color=\"info\" />\r\n        DorokhovaNA\r\n      </a>\r\n      <a className={styles.contacts} href=\"https://t.me/dorokhovana\">\r\n        <TelegramIcon color=\"info\" />\r\n        @dorokhovana\r\n      </a>\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\nexport default Contacts;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Todo from \"../Todo/Todo\";\r\nimport About from \"../About/About\";\r\nimport Contacts from \"../Contacts/Contacts\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport styles from \"./App.module.css\";\r\n\r\nconst App = () => (\r\n  <Router>\r\n    <div className={styles.wrap}>\r\n      <Card className={styles.sidebar}>\r\n        <MenuList>\r\n          <Link to=\"/\" className={styles.link}>\r\n            <MenuItem>Дела</MenuItem>\r\n          </Link>\r\n          <Link to=\"/contacts\" className={styles.link}>\r\n            <MenuItem>Контакты</MenuItem>\r\n          </Link>\r\n        </MenuList>\r\n      </Card>\r\n      <Card className={styles.content}>\r\n        <Route path=\"/\" exact component={Todo} />\r\n        <Route path=\"/contacts\" component={Contacts} />\r\n      </Card>\r\n    </div>\r\n  </Router>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(<App />,  document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"About_title__3DA51\",\"img\":\"About_img__qguDA\",\"bio\":\"About_bio__3MO1x\",\"github\":\"About_github__3rDlZ\",\"link\":\"About_link__6HDob\",\"updated\":\"About_updated__35jFz\",\"language\":\"About_language__1Hj6I\",\"text\":\"About_text__sk-pF\",\"pagination\":\"About_pagination__18Pgn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Contacts_card__iZWbO\",\"title\":\"Contacts_title__37DjN\",\"contacts\":\"Contacts_contacts__3EGYj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"App_wrap__29qLk\",\"link\":\"App_link__aCaoM\",\"sidebar\":\"App_sidebar__L1MVH\",\"whsLogo\":\"App_whsLogo__3yKik\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Item_item__IFakW\",\"done\":\"Item_done__APOc5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__21PT9\",\"text\":\"Footer_text__282Ee\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Todo_wrap__1wIyY\",\"title\":\"Todo_title__1eT1o\"};"],"sourceRoot":""}